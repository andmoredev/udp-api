# ANDRES MORENO

name: Elastic Container Service Deployment

on:
  push:
    paths:
      - template-ecs.yaml
    branches:
      - main

  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy-ecs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Validate file header blob
      run: |
        # Get the default branch (main or master)
        DEFAULT_BRANCH=$(git remote show origin | awk '/HEAD branch/ {print $NF}')

        # Fetch the latest changes
        git fetch origin $DEFAULT_BRANCH --depth=1

        # Get the list of changed files compared to the default branch
        FILES=$(git diff --name-only origin/$DEFAULT_BRANCH HEAD)

        # Define the expected patterns
        PATTERN1="# ANDRES MORENO"
        PATTERN2="// ANDRES MORENO"

        # Read the files list from the previous step
        for file in $FILES; do
          # Skip binary files
          if [[ $(file --mime-type -b "$file") == text/* ]]; then
            # Read the first line
            FIRST_LINE=$(head -n 1 "$file")

            # Check if it matches the expected pattern
            if [[ "$FIRST_LINE" != "$PATTERN1"* && "$FIRST_LINE" != "$PATTERN2"* ]]; then
              echo "❌ ERROR: The file '$file' must start with '$EXPECTED_PATTERN'."
              exit 1
            fi
          fi
        done

        echo "✅ All files meet the required pattern."

    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ vars.AWS_REGION }}
        role-to-assume: ${{ secrets.PIPELINE_EXECUTION_ROLE }}
        role-session-name: ecs-repo-deploy
        role-duration-seconds: 3600
        role-skip-session-tagging: true

    - name: Build and deploy ECS template
      run: |
        sam build  \
          --template template-ecs.yaml \
          --config-file samconfig.yaml \
          --config-env ecs

        sam deploy \
          --template template-ecs.yaml \
          --config-file samconfig.yaml \
          --config-env ecs \
          --s3-bucket ${{ secrets.ARTIFACTS_BUCKET_NAME }} \
          --no-fail-on-empty-changeset \
          --role-arn ${{ secrets.CLOUDFORMATION_EXECUTION_ROLE }}